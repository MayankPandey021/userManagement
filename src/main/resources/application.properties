spring.application.name=userManagement
spring.datasource.url=jdbc:postgresql://localhost:5432/userdb
spring.config.import=env.properties
logging.level.org.springframework.security=DEBUG

spring.datasource.username=${USER_USERNAME}
spring.datasource.password=${USER_PASSWORD}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# OAuth2 Authorization Server settings
spring.security.oauth2.authorizationserver.issuer-url=http://localhost:8080

# JWT signing key (use a secure value in production, ideally from environment variables)

#// This is a base64-encoded key for signing JWTs
spring.security.oauth2.authorizationserver.jwt.signing-key=${JWT_SIGNING_KEY}

# OAuth2 Client settings(in memory database
#spring.security.oauth2.client.registration.my-client.client-id=my-client
#spring.security.oauth2.client.registration.my-client.client-secret=my-secret
#spring.security.oauth2.client.registration.my-client.redirect-uri=http://localhost:8080/login/oauth2/code/my-client
#spring.security.oauth2.client.registration.my-client.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.my-client.scope=read,write

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/oauth2/jwks
